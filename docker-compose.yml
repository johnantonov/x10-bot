services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  app:
    image: node:18-alpine
    working_dir: /usr/src/app  
    volumes:
      - .:/usr/src/app  
    command: sh -c "chmod +x ./node_modules/.bin/ts-node && chmod +x ./node_modules/.bin/tsc && npm install && npm start"
    environment:
      - REDIS_HOST=redis
      - PGHOST=postgres
      - PGUSER=${PGUSER}
      - PGNAME=${PGNAME}
      - PGPASS=${PGPASS}
      - PGPORT=5432
    depends_on:
      - redis
      - postgres
    ports:
      - "3001:3000"
    restart: always

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASS}
      - POSTGRES_DB=${PGNAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  report-service:
    image: node:18-alpine
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: sh -c "chmod +x ./node_modules/.bin/ts-node && chmod +x ./node_modules/.bin/tsc && npm install && npm run build && node dist/src/services/reportService.js"
    environment:
      - PGHOST=postgres
      - PGUSER=${PGUSER}
      - PGNAME=${PGNAME}
      - PGPASS=${PGPASS}
      - PGPORT=5432
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    depends_on:
      - postgres
    restart: always

  migration:
    image: postgres:15-alpine
    container_name: migration
    volumes:
      - ./database/migrations:/usr/src/database/migrations  
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASS}
      - POSTGRES_DB=${PGNAME}
    command: sh -c "psql -h postgres -U ${PGUSER} -d ${PGNAME} -f /usr/src/database/migrations/V1_0__create_first_table.sql"
    depends_on:
      - postgres
    restart: on-failure
  
volumes:
  redis_data:
  postgres_data: